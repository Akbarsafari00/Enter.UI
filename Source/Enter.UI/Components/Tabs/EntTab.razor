@using Enter.UI.Abstractions.Components.Icon
@inherits EntTabBase
@namespace Enter.UI.Components
<CascadingValue Value="@this">
    <div @attributes="@AdditionalAttributes" class="@RootCss" >
        @if (Panels.Count > 0)
        {
            <ul class="ent-tab-item-container">
                
                @foreach (var tabPanels in Panels)
                {
                   
                    
                    <li class="@GetItemClass(IsActiveTab(tabPanels.Id))" @onclick="() => ActivateTabAsync(tabPanels.Id)" @key="@tabPanels.Id">
                        <div class="ent-tab-content">
                            <EntIcon Icon="@tabPanels.Icon"/>
                            <span>@tabPanels.Title</span>
                        </div>
                        @if (Closeable)
                        {
                            <div @onclick="() => OnTabClose(tabPanels.Id)" class="ent-tab-close">
                                <EntIcon Icon="EntIconName.Remove" IconSize="EntIconSize.Default" IconStyle="EntIconStyle.Light"/>
                            </div>
                        }
                    </li>
                }
                @if (Closeable)
                {
                    <li class="@GetItemClass(false)">
                        <div @onclick="OnTabAllClose" class="ent-tab-action ">
                            <EntIcon Icon="EntIconName.Delete" Type="EntIconType.IconTag"/>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <div class="ent-tab-item-container-message">
                <p>@TabNoContentMessage</p>
            </div>
        }

        <div class="@PanelCss">
            @ChildContent
            @if (!Panels.Any())
            {
                @DefaultPanel
            }
        </div>
    </div>
</CascadingValue>