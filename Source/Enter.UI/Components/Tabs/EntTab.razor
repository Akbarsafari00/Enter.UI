@using Enter.UI.Components.Icon
@using Enter.UI.Components.Button
@inherits EntTabBase
@namespace Enter.UI.Components
<CascadingValue Value="@(this)">
    <div @attributes="@AdditionalAttributes" class="@RootCss">

        @if (ResponsiveMode)
        {
            <div class="responsive:ent-tab-item-container">
               
                    <div @onclick="OnToggleMenu" class="responsive:ent-tab-item-container-header">
                        <span class="ent-tab-content">
                            <EntButton Icon="EntIconName.Dashboard" class="ent-tab-close-all"/>
                            @if (Panels.Any() && _activeTab != null)
                            {
                                <span>@_activeTab.Title</span>
                                <EntButton>@Panels.Count</EntButton>
                            }
                            else
                            {
                                <span>@TabNoContentMessage</span>
                            }
                           
                        </span>
                    </div>
                    @if (Panels.Any())
                    {
                        <EntExpandable @bind-Expanded="@_toogleMenu" class="responsive:ent-tab-item-container-content">
                            <ul class="ent-tab-item-container">
                                @foreach (var tabPanels in Panels)
                                {
                                    <li class="@GetItemClass(IsActiveTab(tabPanels.Id))" @onclick="() => ActivateTabAsync(tabPanels.Id)" @key="@tabPanels.Id">
                                        <span class="ent-tab-content">
                                            <EntIcon Icon="@tabPanels.Icon"/>
                                            @if (!IconMinify)
                                            {
                                                <span>@tabPanels.Title</span>
                                            }
                                            @if (Closeable)
                                            {
                                                <EntButton @onclick="() => OnTabClose(tabPanels.Id)" Icon="EntIconName.Remove" class="ent-tab-close"/>
                                            }
                                        </span>
                                    </li>
                                }
                            </ul>
                            <div class="ent-tab-item-actions">
                                <EntButton @onclick="OnTabAllClose" Icon="EntIconName.Delete"/>
                            </div>
                        </EntExpandable>
                    }
               
            </div>
        }
        else
        {
            @if (Panels.Count > 0)
            {
                <ul class="ent-tab-item-container">
                    @foreach (var tabPanels in Panels)
                    {
                        <li class="@GetItemClass(IsActiveTab(tabPanels.Id))" @onclick="() => ActivateTabAsync(tabPanels.Id)" @key="@tabPanels.Id">
                            <span class="ent-tab-content">
                                <EntIcon Icon="@tabPanels.Icon"/>
                                @if (!IconMinify)
                                {
                                    <span>@tabPanels.Title</span>
                                }
                                @if (Closeable)
                                {
                                    <EntButton @onclick="() => OnTabClose(tabPanels.Id)" Icon="EntIconName.Remove" Size="ButtonSize.Small" class="ent-tab-close"/>
                                }
                            </span>
                        </li>
                    }
                    @if (Closeable)
                    {
                        <li class="@GetItemClass(false)">
                            <span @onclick="OnTabAllClose" class="ent-tab-action ">
                                <EntIcon Icon="EntIconName.Delete" Type="EntIconType.IconTag"/>
                            </span>
                        </li>
                    }
                </ul>
            }
            else
            {
                <div class="ent-tab-item-container-message">
                    <p>@TabNoContentMessage</p>
                </div>
            }
        }


        <div class="@PanelCss">
            @ChildContent
            @if (!Panels.Any())
            {
                @DefaultPanel
            }
        </div>
    </div>
</CascadingValue>