@each $utility, $config in $utilities {
  $properties: map-get($config, property);
  $propertiesRtl: map-get($config, propertyRtl);
  $cssName: map-get($config, cssName);
  $cssNamePostFix: map-get($config, cssNamePostFix);
  $values: map-get($config, values);

  @if $cssNamePostFix == null {
    $cssNamePostFix: "";
  }

  @each $size, $value in $values {


    @if $size != null {
      $size: -#{$size};
    } @else {
      $size: "";
    }

    .#{$cssName}#{$size}#{$cssNamePostFix} {
      @each $property in $properties {
        #{$property}: $value !important;
      }
    }

    .hover\:#{$cssName}#{$size}#{$cssNamePostFix}:hover {
      @each $property in $properties {
        #{$property}: $value !important;
      }
    }
    //[dir="rtl"] .#{$cssName}#{$size} {
    //  @each $property in $propertiesRtl {
    //    #{$property}: $value;
    //  }
    //}
    //.rtl\:#{$cssName}#{$size} {
    //  @each $property in $propertiesRtl {
    //    #{$property}: $value;
    //  }
    //}
  }

  @if map-get($config, breakpoint) {
    @each $bp, $width in $breakpoints {
      @media (min-width: $width) {
        @each $size, $value in $values {
          @if $size != null {
            $size: -#{$size};
          } @else {
            $size: "";
          }

          .#{$bp}\:#{$cssName}#{$size}#{$cssNamePostFix} {
            @each $property in $properties {
              #{$property}: $value !important;
            }
          }

          .hover\:#{$bp}\:#{$cssName}#{$size}#{$cssNamePostFix}:hover {
            @each $property in $properties {
              #{$property}: $value !important;
            }
          }

          //[dir="rtl"] .#{$bp}\:#{$cssName}#{$size} {
          //  @each $property in $propertiesRtl {
          //    #{$property}: $value;
          //  }
          //}
          //
          //.rtl\:#{$bp}\:#{$cssName}#{$size} {
          //  @each $property in $propertiesRtl {
          //    #{$property}: $value;
          //  }
          //}
        }
      }
    }
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin: 0 -0.5rem;

  > * {
    width: 100%;
    padding: 0 0.5rem;
  }
}

@for $i from 1 through 12 {

  .col-#{$i} {
    flex: 0 0 auto;
    width: percentage($i/12);
  }

}

@each $bp, $width in $breakpoints {
  @for $i from 1 through 12 {
    @media (min-width: $width) {
      .#{$bp}\:col-#{$i} {
        flex: 0 0 auto;
        width: percentage($i/12);
      }
    }
  }
}


.vertical-scroll {
  display: flex !important;
  flex-direction: column;
  flex: 1;
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

.horizontal-scroll {
  display: flex !important;
  flex-direction: row;
  flex: 1;
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

.cursor-pointer {
  cursor: pointer;
}
