@namespace Enter.UI.Components
@inherits EntComponentBase
@using Enter.UI.Abstractions.Services
@implements IAsyncDisposable
<div class="@RootClass">
    @foreach (var item in _entPopoverService.PopoverInstances)
    {
        <div @key="@item.Key" @onclick="() => { }" class="@item.Value.PopoverClass" id="@($"ent-popover-content-{item.Key}")">
            @if (item.Value.ShowContent)
            {
                @item.Value.ContentFragment
            }
        </div>
    }
</div>

@code {

    private string RootClass => CssClassBuilder
        .AddClass("ent-popover-provider")
        .Build();

    [Inject]
    public IEntPopoverService EntPopoverService { get; set; }
    

    private EntPopoverService _entPopoverService = default!;
    

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _entPopoverService = (EntPopoverService)EntPopoverService;

        _entPopoverService.FragmentsChanged += EntPopoverServiceOnFragmentsChanged;
    }

    private void EntPopoverServiceOnFragmentsChanged(object? sender, EventArgs e)
    {
        StateHasChanged();
    }

    private async Task OnPopoverContainerClick(MouseEventArgs arg)
    {
        // await EntPopoverService.CloseAllAsync();
    }

    public async ValueTask DisposeAsync()
    {
        _entPopoverService.FragmentsChanged -= EntPopoverServiceOnFragmentsChanged;
    }

}