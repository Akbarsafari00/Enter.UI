@namespace Enter.UI.Components
@using System.Diagnostics.CodeAnalysis
@using Enter.UI.Core.Enums
@inherits Microsoft.AspNetCore.Components.Forms.InputBase<string?>

<div class="@RootClass">
    <InputText class="@(RootClass + "-input")" @attributes="@AdditionalAttributes"
               @onfocusin="OnInputFocusInCallback"
               @onfocusout="OnInputFocusOutCallback"
               disabled
               bind-Value="@Value" Value="@Value" DisplayName="@DisplayName" ValueChanged="@ValueChanged" ValueExpression="@ValueExpression"/>
    <EntPopover Open="_showMenu" RelativeWidth="true" Anchor="Origin.BottomCenter" Transform="Origin.TopCenter" PopoverClass="@(RootClass + "-popover")">
        <EntCard>
            <CardBody >
                <div class="d-flex flex-column gap-4">
                    <input placeholder="جستجو ..."/>
                    <EntNavMenu class="@(RootClass + "-menu")">
                        <EntNavMenuTextItem Text="S" Click="() => { }"/>
                    </EntNavMenu>
                </div>

            </CardBody>
        </EntCard>
    </EntPopover>
</div>

@code {

    private string RootClass => new CssClassBuilder()
        .AddClass("ent-input-autocomplete")
        .Build();

    public string SearchValue { get; set; }
    
    private bool _showMenu = false;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }


    protected override bool TryParseValueFromString(string? value, out string? result, [NotNullWhen(false)] out string? validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }

    private void OnInputFocusInCallback()
    {
        _showMenu = true;
        StateHasChanged();
    }

    private void OnInputFocusOutCallback()
    {
        _showMenu = false;
        StateHasChanged();
    }

}