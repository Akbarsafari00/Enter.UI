@namespace Enter.UI.Components
@inherits EntBaseComponent
<button @attributes="@AdditionalAttributes" class="@RootClass" @onclick="@Click">
    @if (Icon != null)
    {
        <EntIcon Icon="@Icon" />
    }
    @ChildContent
</button>

@code {

    private string RootClass => CssClassBuilder
        .AddClass("ent-btn")
        .AddClass("ent-btn-lg", !IsOutline && Size == ButtonSize.Large)
        .AddClass("ent-btn-sm", !IsOutline && Size == ButtonSize.Small)
        .AddClass("bg-primary cl-light", !IsOutline && Color == ButtonColor.Primary)
        .AddClass("bg-secondary cl-dark", !IsOutline && Color == ButtonColor.Secondary)
        .AddClass("bg-light cl-dark", !IsOutline && Color == ButtonColor.Light)
        .AddClass("bg-dark cl-light", !IsOutline && Color == ButtonColor.Dark)
        .AddClass("bg-succcess cl-light", !IsOutline && Color == ButtonColor.Success)
        .AddClass("bg-danger cl-light", !IsOutline && Color == ButtonColor.Danger)
        .AddClass("bg-warning cl-light", !IsOutline && Color == ButtonColor.Warning)
        .AddClass("bg-info cl-light", !IsOutline && Color == ButtonColor.Info)

        .AddClass("border border-primary cl-primary hover:bg-primary hover:cl-light", IsOutline && Color == ButtonColor.Primary)
        .AddClass("border border-secondary cl-secondary hover:bg-secondary hover:cl-dark", IsOutline && Color == ButtonColor.Secondary)
        .AddClass("border border-light cl-light hover:bg-light hover:cl-dark", IsOutline && Color == ButtonColor.Light)
        .AddClass("border border-dark cl-dark hover:bg-dark hover:cl-light", IsOutline && Color == ButtonColor.Dark)
        .AddClass("border border-succcess cl-succcess hover:bg-succcess hover:cl-light", IsOutline && Color == ButtonColor.Success)
        .AddClass("border border-danger cl-danger hover:bg-danger hover:cl-light", IsOutline && Color == ButtonColor.Danger)
        .AddClass("border border-warning cl-warning hover:bg-warning hover:cl-light", IsOutline && Color == ButtonColor.Warning)
        .AddClass("border border-info cl-info hover:bg-info hover:cl-light", IsOutline && Color == ButtonColor.Info)
        .Build();

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public ButtonSize Size { get; set; } = ButtonSize.Default;
    [Parameter]
    public bool IsOutline { get; set; } = false;
    [Parameter]
    public ButtonColor Color { get; set; } = ButtonColor.Primary;

    [Parameter]
    public string? Icon { get; set; }

    [Parameter]
    public EventCallback Click { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            var attr = AdditionalAttributes;
        }
        base.OnAfterRender(firstRender);
    }
}