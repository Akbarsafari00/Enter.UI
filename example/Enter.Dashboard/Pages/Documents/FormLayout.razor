@page "/documents/form"

<div class="p-4">
    <EntToolbar  @bind-Expanded="@Expanded">
        <StartContent>
                     <EntButton Appearance="ButtonAppearance.Default" Color="ButtonColor.Primary" Icon="EntIconName.Add">Add</EntButton>
                    <EntButton Appearance="ButtonAppearance.Outline" Icon="EntIconName.Delete" Loading="true">Delete</EntButton>
        </StartContent>
        <EndContent>
            <EntButton Appearance="ButtonAppearance.Outline" Icon="EntIconName.Search" @onclick="() => { Expanded = !Expanded;}"></EntButton>
        </EndContent>
        <ExpandContent>
            <div class="py-4">
                <EditForm class="ent-edit-form" Model="Input" OnSubmit="@OnSubmit">
                                <EntInputGroup
                                    class="tablet:col-12 mb-4"
                                    Label="Small Input"
                                    For="() => Input.User">
                                    <EntInputText size="@EntInputSize.Small" @bind-Value="Input.Age"/>
                                </EntInputGroup>
                                <EntInputGroup
                                    class="tablet:col-12 mb-4"
                                    Label="Input"
                                    For="() => Input.Age">
                                    <EntInputText @bind-Value="Input.Age"/>
                                </EntInputGroup>
                                <EntInputGroup
                                    class="tablet:col-12 mb-4"
                                    Label="Large Input"
                                    For="() => Input.Age">
                                    <EntInputText size="@EntInputSize.Large" @bind-Value="Input.Age"/>
                                </EntInputGroup>
                            </EditForm>
            </div>
        </ExpandContent>
    </EntToolbar>
    <EntCard Expandable="true" Title="Form Layout" class="my-4">
        <CardBody>
            <EditForm class="ent-edit-form" Model="Input" OnSubmit="@OnSubmit">
                <DataAnnotationsValidator/>
                <div class="row">
                    <EntInputGroup For="() => Input.Id" Label="شناسه" class="tablet:col-4 mb-4 ">
                        <EntInputText @bind-Value="Input.Id" Icon="@EntIconName.Dashboard"/>
                    </EntInputGroup>
                    <EntInputGroup For="() => Input.User" Label="نام" class="tablet:col-4 mb-4">

                        <EntInputAutoComplete
                            @ref="_autoCompleteReference"
                            @bind-Value="Input.User"
                            ValueFunc="x => x.Name"
                            
                            DataSources="DataSource"
                         
                            OnSearchChange="OnLastNameSearchChange"/>

                    </EntInputGroup>
                    <EntInputGroup
                        For="() => Input.Role"
                        Label="نقش"
                        class="tablet:col-4 mb-4">


                        <EntInputSelect @bind-Value="Input.Role"
                                        PlaceHolder="نقش مورد نظر را انتخاب نمایید"
                                        DataSources="Constants.Roles"
                                        ValueFunc="x => x.Value"
                                        TextFunc="x => x.Text"/>


                    </EntInputGroup>
                    <EntInputGroup
                        class="tablet:col-4 mb-4 "
                        Label="سن"
                        For="() => Input.Age">
                        <EntInputTextarea Rows="10" @bind-Value="Input.Age"/>
                    </EntInputGroup>


                </div>
                <div class="row">
                    <div class="tablet:col-4">
                        <EntButton type="submit">ارسال</EntButton>
                    </div>
                </div>
            </EditForm>
        </CardBody>

    </EntCard>
    <EntCard Title="Input Size" class="mb-4">
        <CardBody>
            <EditForm class="ent-edit-form" Model="Input" OnSubmit="@OnSubmit">
                <EntInputGroup
                    class="tablet:col-12 mb-4"
                    Label="Small Input"
                    For="() => Input.User">
                    <EntInputText size="@EntInputSize.Small" @bind-Value="Input.Age"/>
                </EntInputGroup>
                <EntInputGroup
                    class="tablet:col-12 mb-4"
                    Label="Input"
                    For="() => Input.Age">
                    <EntInputText @bind-Value="Input.Age"/>
                </EntInputGroup>
                <EntInputGroup
                    class="tablet:col-12 mb-4"
                    Label="Large Input"
                    For="() => Input.Age">
                    <EntInputText size="@EntInputSize.Large" @bind-Value="Input.Age"/>
                </EntInputGroup>
            </EditForm>
        </CardBody>
    </EntCard>
    <EntCard Title="Input Icon" class="mb-4">
        <CardBody>
            <EditForm class="ent-edit-form" Model="Input" OnSubmit="@OnSubmit">
                <EntInputGroup
                    class="tablet:col-12 mb-4"
                    Label="Small Input"
                    For="() => Input.User">
                    <EntInputText Icon="EntIconName.User" size="@EntInputSize.Small" @bind-Value="Input.Age"/>
                </EntInputGroup>
                <EntInputGroup
                    class="tablet:col-12 mb-4"
                    Label="Input"
                    For="() => Input.Age">
                    <EntInputText Icon="EntIconName.Search" @bind-Value="Input.Age"/>
                </EntInputGroup>
                <EntInputGroup
                    class="tablet:col-12 mb-4"
                    Label="Large Input"
                    For="() => Input.Age">
                    <EntInputText Icon="EntIconName.Dashboard" size="@EntInputSize.Large" @bind-Value="Input.Age"/>
                </EntInputGroup>
            </EditForm>
        </CardBody>
    </EntCard>
</div>

@code {

    public bool Expanded { get; set; }
    
    public EntInputAutoComplete<Users> _autoCompleteReference { get; set; }

    public class InputModel
    {
        public string Id { get; set; } = Guid.NewGuid().ToString();

        [Required(ErrorMessage = "کاربر اجباری میباشد")]
        public string User { get; set; }


        [Required(ErrorMessage = "سن اجباری میباشد")]
        public string Age { get; set; }

        [Required(ErrorMessage = "نقش اجباری میباشد")]
        public string Role { get; set; }
    }

    public InputModel Input { get; set; } = new()
    {
        User = "اکبر",
        Role = "Admin"
    };

    private async Task OnSubmit()
    {
        await _autoCompleteReference.FocusAsync();
        Input.Role = "Developer";
        StateHasChanged();
    }


    public List<Users> DataSource = new();


    protected override void OnInitialized()
    {
        DataSource = Constants.Users;

        base.OnInitialized();
    }

    private void OnLastNameSearchChange(string search)
    {
        if (search is null)
            return;
        DataSource = Constants.Users.Where(x => x.LastName.ToLower().Contains(search.ToLower())).ToList();

        StateHasChanged();
    }

}